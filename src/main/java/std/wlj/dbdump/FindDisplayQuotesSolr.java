/**
 * Â© 2018 by Intellectual Reserve, Inc. All rights reserved.
 */
package std.wlj.dbdump;

import java.util.*;

import org.apache.solr.client.solrj.SolrQuery;
import org.familysearch.standards.place.data.solr.PlaceRepDoc;
import org.familysearch.standards.place.data.solr.SolrConnection;
import org.familysearch.standards.place.exceptions.PlaceDataException;

import std.wlj.util.SolrManager;

/**
 * Find Display names that are NOT variant names for a given place-rep.  This application relies
 * on the "db-dump" files generated by the db-to-solr load process.  Each subdirectory contains
 * files for about 1,000,000 place-reps.
 * 
 * @author wjohnson000
 *
 */
public class FindDisplayQuotesSolr {

    private static SolrConnection solrConn;

    public static void main(String...args) throws Exception {
        solrConn = SolrManager.localEmbeddedConnection("C:/D-drive/solr/standalone-7.7.1");
//        solrConn = SolrManager.awsIntConnection(false);

        List<Integer> repIds = new ArrayList<>();
        for (int repId=1;  repId<10_999_999;  repId++) {
            repIds.add(repId);
            if (repIds.size() > 5000) {
                processReps(repIds);
                repIds.clear();
            }
        }

        solrConn.shutdown();
        System.exit(0);
    }

    static void processReps(List<Integer> repIds) throws PlaceDataException {
        String query = "repId:[" + repIds.get(0) + " TO " + repIds.get(repIds.size()-1) +"]";

        SolrQuery solrQuery = new SolrQuery(query);
        solrQuery.setSort("repId", SolrQuery.ORDER.asc);
        solrQuery.setRows(repIds.size()+10);

        List<PlaceRepDoc> docs = solrConn.search(solrQuery);
        docs.stream()
            .filter(doc -> ! doc.isDeleted())
            .forEach(doc -> processDoc(doc));
    }

    static void processDoc(PlaceRepDoc repDoc) {
        if (repDoc.getDisplayNameMap().values().stream().anyMatch(nam -> nam.contains("\""))) {
            System.out.println();
            System.out.println(repDoc.getRepId() + "|" + Arrays.toString(repDoc.getJurisdictionIdentifiers()));
            repDoc.getDisplayNameMap().entrySet().stream()
                .filter(entry -> entry.getValue().contains("\""))
                .forEach(entry -> System.out.println("|" + entry.getKey() + "|" + entry.getValue()));
        }
    }
}
